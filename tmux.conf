# Use C-o as prefix (a and b are for emacs moves)
set -g prefix C-o

# utf8 is on
set -g utf8 on
set -g status-utf8 on

# Address vim mode switching delay
set -s escape-time 0

# Toggle mouse on with ^B m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# Increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# Set only on OS X where it's required
if 'which -s reattach-to-user-namespace' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# Look good
set -g default-terminal "screen-256color"

# Emacs key bindings in tmux command prompt
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# C-o C-l clears screen
bind C-l send-keys 'C-l'

# Use v/y to select/yank text in copy mode.
bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind -t vi-copy 0 start-of-line
bind -t vi-copy A end-of-line
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "xclip -sel clip -i"

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Act like vim
setw -g mode-keys vi

# Shortcut for reloading config
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Better pane splitting
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

bind c new-window -c "#{pane_current_path}"

bind-key b break-pane -d

# Resizing
bind -n S-Left resize-pane -L 6
bind -n S-Right resize-pane -R 6
bind -n S-Down resize-pane -D 3
bind -n S-Up resize-pane -U 3

# Color status bar
set -g status-bg black
set -g status-fg white

# Highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg white

# Set color of active pane
set -g pane-border-fg blue
set -g pane-active-border-fg white
set -g pane-active-border-bg default
set -g status-left-length 10
set -g status-left ""
set -g status-right ""
set-option -g status-utf8 on
set -g status-interval 60

set -g status-justify left
setw -g monitor-activity off
set -g visual-activity off

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Start windows numbering at 1
set -g base-index 1

# Make pane numbering consistent with windows
setw -g pane-base-index 1

# Renumber windows automatically when one gets deleted
set-option -g renumber-windows on

# List of plugins
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
'
# Plugin tmux-plugins/tmux-sensible is better to copy it directly

# Initializes TMUX plugin manager.
run-shell '~/.tmux/plugins/tpm/tpm'
